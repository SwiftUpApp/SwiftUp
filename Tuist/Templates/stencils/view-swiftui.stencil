import ComposableArchitecture
import SwiftUI

struct {{ name }}View: View {
    let store: StoreOf<{{ name }}Feature>
    @ObservedObject var viewStore: ViewStoreOf<{{ name }}Feature>

    init(store: StoreOf<{{ name }}Feature>) {
        self.store = store
        self.viewStore = ViewStore(store, observe: { $0 })
    }

    var body: some View {
        Text("Happy coding!")
    }
}

struct {{ name }}View_Previews: PreviewProvider {
    static var previews: some View {
        {{ name }}View(store: .init(initialState: .init(), reducer: {{ name }}Feature.init))
    }
}